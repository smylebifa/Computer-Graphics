#include "CBall.h"

CBall::CBall(double x, double y, double vx, double vy, double r)
{
	hBrush = CreateSolidBrush(RGB(0, 255, 0));

	this->x = x;
	this->y = y;
	this->vx = vx;
	this->vy = vy;
	this->r = r;
	this->prev_ticks = GetTickCount();
	this->type_of_color = 0;
}

CBall::~CBall()
{
	DeleteObject(hBrush);
}

void CBall::Draw(HDC dc)
{
	HBRUSH hOldbrush;
	hOldbrush = SelectBrush(dc, hBrush);
	Ellipse(dc, (x - r), (y - r), (x + r), (y + r));
	SelectBrush(dc, hOldbrush);
}

void CBall::Move(DWORD ticks, CHLimiter *l)
{
	double s_delta = ((double)(ticks - this->prev_ticks)) / 1000.0;

	if ((this->x >= (bounds.right - r)) && (this->vx > 0))
		this->vx = -(this->vx);
	if ((this->x <= r) && (this->vx < 0))
		this->vx = -(this->vx);
	if (this->y >= (bounds.bottom - r) && (this->vy > 0))
		this->vy = -(this->vy);
	if ((this->y <= r) && (this->vy < 0))
		this->vy = -(this->vy);

	if (((this->x + r) >= limit1->GetMinX()) && ((this->x - r) <= limit1->GetMaxX()))
	{
		if (this->vy > 0)
		{
			if (((limit1->GetY() - this->y) < this->r) && ((limit1->GetY() - this->y) > 0))
			{
				this->vy = -(this->vy);

				//если цвет зеленый, меняем на голубой
				if (type_of_color == 0)
				{
					hBrush = CreateSolidBrush(RGB(0, 0, 255));
					type_of_color++;
					l->changeColor(1);
				}
				
				//если цвет голубой, меняем на розовый
				else if (type_of_color == 1)
				{
					hBrush = CreateSolidBrush(RGB(255, 0, 255));
					type_of_color++;
					l->changeColor(2);
				}

				//если цвет розовый, меняем на зеленый
				else
				{
					hBrush = CreateSolidBrush(RGB(0, 255, 0));
					type_of_color = 0;
					l->changeColor(0);
				}
				
			}
				
		}

		else
		{
			if (((this->y - limit1->GetY()) < this->r) && ((this->y - limit1->GetY()) > 0))
			{
				this->vy = -(this->vy);
				
				//если цвет зеленый, меняем на голубой
				if (type_of_color == 0)
				{
					hBrush = CreateSolidBrush(RGB(0, 0, 255));
					type_of_color++;
					l->changeColor(1);
				}

				//если цвет голубой, меняем на розовый
				else if (type_of_color == 1)
				{
					hBrush = CreateSolidBrush(RGB(255, 0, 255));
					type_of_color++;
					l->changeColor(2);
				}

				//если цвет розовый, меняем на зеленый
				else
				{
					hBrush = CreateSolidBrush(RGB(0, 255, 0));
					type_of_color = 0;
					l->changeColor(0);
				}
			}
				
		}
	}

	this->prev_ticks = ticks;

	double dx = vx * s_delta;
	double dy = vy * s_delta;

	this->x += dx;
	this->y += dy;

}

void CBall::SetBounds(RECT bnds)
{
	this->bounds = bnds;
}

void CBall::SetHLimiter(CHLimiter *l)
{
	this->limit1 = l;
}